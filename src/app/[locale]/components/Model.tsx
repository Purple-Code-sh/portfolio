"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/robot.glb --output public/Model.tsx 
Author: assetfactory (https://sketchfab.com/assetfactory)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/robot-character-2fe59c8ef49547d2a1e0a65506701a7e
Title: Robot character
*/

import * as THREE from "three";
import React, { useEffect, useRef, type JSX } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

// 1. SE ELIMINÓ LA LÍNEA DE 'animations'
type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
  };
  animations: THREE.AnimationClip[];
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);

  const { nodes, materials, animations } = useGLTF(
    "/robot.glb"
  ) as unknown as GLTFResult;

  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (animations.length > 0) {
      actions[animations[0].name]?.play();
    }
  }, [actions, animations]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={materials.material}
        />
        <mesh
          geometry={nodes.Object_3.geometry}
          material={materials.material}
        />
        <mesh
          geometry={nodes.Object_4.geometry}
          material={materials.material}
        />
        <mesh
          geometry={nodes.Object_5.geometry}
          material={materials.material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/robot.glb");
